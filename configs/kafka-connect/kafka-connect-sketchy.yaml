apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: my-connect-cluster
  namespace: kafka
  annotations:
    strimzi.io/use-connector-resources: "true"
spec:
  version: 4.1.0
  replicas: 1
  bootstrapServers: my-cluster-kafka-bootstrap:9092
  resources:
    requests:
      memory: 1Gi
      cpu: 500m
    limits:
      memory: 2Gi
      cpu: 1
  logging:
    type: inline
    loggers:
      connect.root.logger.level: "INFO"
      io.lenses.streamreactor.connect.influx: "DEBUG"
      io.lenses.streamreactor.connect.influx.writers: "DEBUG"
      io.lenses.streamreactor.connect.influx.converters: "DEBUG"
  template:
    pod:
      imagePullSecrets:
        - name: ecr-secret
      volumes:
        - name: questdb-tmp
          emptyDir: {}
    connectContainer:
      env:
        - name: JAVA_TOOL_OPTIONS
          value: "-Djava.io.tmpdir=/mnt/questdb-tmp"
      volumeMounts:
        - name: questdb-tmp
          mountPath: /mnt/questdb-tmp
  config:
    group.id: connect-cluster
    offset.storage.topic: connect-cluster-offsets
    config.storage.topic: connect-cluster-configs
    status.storage.topic: connect-cluster-status
    config.storage.replication.factor: -1
    offset.storage.replication.factor: -1
    status.storage.replication.factor: -1
  jvmOptions:
    "-Xmx": "2G"
    "-Xms": "512M"
  build:
    output:
      type: docker
      image: public.ecr.aws/r9b1k0m0/kafka-connect:latest
      pushSecret: ecr-secret
    plugins:
      - name: mqtt
        artifacts:
          - type: zip
            url: https://github.com/lensesio/stream-reactor/releases/download/10.0.1/kafka-connect-mqtt-10.0.1.zip
      - name: questdb
        artifacts:
          - type: zip
            url: https://github.com/questdb/kafka-questdb-connector/releases/download/v0.16/kafka-questdb-connector-0.16-bin.zip
      - name: influxdb
        artifacts:
           - type: zip
             url: https://github.com/lensesio/stream-reactor/releases/download/10.0.1/kafka-connect-influxdb-10.0.1.zip

